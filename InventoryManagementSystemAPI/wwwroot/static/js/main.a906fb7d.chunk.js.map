{"version":3,"sources":["stores/CommonStore.ts","api/axiosAgent.ts","stores/ItemStore.ts","stores/UserStore.ts","stores/ModalStore.tsx","stores/BaseStore.ts","features/user/LoginForm.tsx","features/user/RegisterForm.tsx","features/user/Inventory/InventoryTable.tsx","features/user/Inventory/InventoryPage.tsx","layout/navigation/NavBar.tsx","layout/Loading.tsx","features/items/AddItemForm.tsx","features/items/AddItemModal.tsx","features/user/AccountPage.tsx","features/user/PublicAccountPage.tsx","layout/NotFound.tsx","layout/ServerError.tsx","features/items/ItemPage.tsx","features/items/EditItemForm.tsx","features/items/EditItemModal.tsx","layout/App.tsx","reportWebVitals.ts","layout/util/ScrollToTop.tsx","index.tsx"],"names":["CommonStore","baseStore","loading","setLoading","makeAutoObservable","this","axios","defaults","baseURL","process","interceptors","request","use","config","token","window","localStorage","getItem","headers","Authorization","error","Promise","reject","response","undefined","message","history","push","status","data","includes","removeItem","method","errors","hasOwnProperty","axiosAgent","User","login","user","post","then","register","registerAdmin","currentUser","get","userAtId","id","Item","getItems","addItem","item","deleteItem","delete","editItem","put","ItemStore","selectedItem","itemsMap","Map","itemsLoading","itemLoading","setItemsLoading","setItemLoading","a","Object","values","runInAction","dateAdded","Date","addedBy","firstName","lastName","items","forEach","set","commonStore","addedItem","deletedItem","UserStore","selectedUser","userLoading","setUserLoading","state","userToLogin","setItem","userToRegister","isAdmin","console","log","getCurrentUser","getUserAtId","removeActiveUser","logout","ModalStore","isShowing","isEditShowing","setEditShow","setShow","BaseStoreContext","createContext","userStore","itemStore","modalStore","loginPageStyle","position","left","top","transform","maxWidth","background","padding","borderRadius","boxShadow","labelStyle","float","observer","useContext","initialValues","email","password","onSubmit","setErrors","catch","validationSchema","Yup","required","handleSubmit","touched","isSubmitting","isValid","dirty","className","style","display","justifyContent","alignItems","htmlFor","type","name","placeholder","Alert","variant","Button","disabled","Spinner","as","animation","size","role","aria-hidden","to","userName","setStatus","setSubmitting","Password","username","matches","setFieldValue","onChange","e","value","target","searchData","isLoading","title","columns","field","Array","from","actions","icon","tooltip","onClick","event","rowData","options","searchText","match","useEffect","finally","params","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","NavDropdown","alignRight","pathname","Divider","isMobile","errorMessage","test","path","createError","toString","barcode","toJSON","Barcode","context","pattern","preventDefault","Modal","dialogAs","AddItemForm","aria-labelledby","centered","show","onHide","Dialog","Card","width","Row","Col","xs","md","height","margin","msTransform","fontSize","toLocaleDateString","toLocaleTimeString","EditItemForm","withRouter","location","AddItemModal","EditItemModal","exact","render","Container","marginTop","component","RegisterForm","InventoryPage","key","props","AccountPage","ServerError","NotFound","LoginForm","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","useLocation","scrollTo","createBrowserHistory","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a906fb7d.chunk.js","sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\nimport { BaseStore } from \"./BaseStore\";\r\n\r\nexport default class CommonStore {\r\n  baseStore: BaseStore;\r\n  constructor(baseStore: BaseStore) {\r\n    makeAutoObservable(this);\r\n    this.baseStore = baseStore;\r\n  }\r\n\r\n  loading: boolean = true;\r\n\r\n  setLoading = (loading: boolean) => {\r\n    this.loading = loading;\r\n  };\r\n}\r\n","import axios, { AxiosResponse } from \"axios\";\nimport { history } from \"..\";\nimport { IFormItem, IItem } from \"../models/Item\";\nimport { IUser, IUserFormValues } from \"../models/User\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use(\n  (config) => {\n    const token = window.localStorage.getItem(\"token\");\n    if (token) config.headers.Authorization = `Bearer ${token}`;\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.response.use(undefined, (error) => {\n  if (error.message === \"Network Error\" && !error.response) {\n    history.push(\"/ServerError\");\n  }\n  const { status, data, config, headers } = error.response;\n  if (status === 404) {\n    history.push(\"/NotFound\");\n  }\n  if (\n    status === 401 &&\n    headers[\"www-authenticate\"].includes(\n      'Bearer error=\"invalid_token\", error_description=\"The token expired at'\n    )\n  ) {\n    window.localStorage.removeItem(\"token\");\n    history.push(\"/login\");\n  }\n  if (\n    status === 400 &&\n    config.method === \"get\" &&\n    data.errors.hasOwnProperty(\"id\")\n  ) {\n    history.push(\"/NotFound\");\n  }\n  if (status === 500) {\n    history.push(\"/ServerError\");\n  }\n  throw error;\n});\n\nconst axiosAgent = {\n  User: {\n    login: (user: IUserFormValues): Promise<IUser> =>\n      axios\n        .post(`account/login`, user)\n        .then((response: AxiosResponse) => response.data),\n    register: (user: IUserFormValues): Promise<IUser> =>\n      axios\n        .post(`account/register`, user)\n        .then((response: AxiosResponse) => response.data),\n    registerAdmin: (user: IUserFormValues): Promise<IUser> =>\n      axios\n        .post(`account/registerAdmin`, user)\n        .then((response: AxiosResponse) => response.data),\n    currentUser: (): Promise<IUser> =>\n      axios.get(`account/`).then((response: AxiosResponse) => response.data),\n    userAtId: (id: string): Promise<IUser> =>\n      axios\n        .get(`account/${id}`)\n        .then((response: AxiosResponse) => response.data),\n  },\n\n  Item: {\n    getItems: (): Promise<IItem[]> =>\n      axios.get(`items`).then((response: AxiosResponse) => response.data),\n    getItem: (id: string): Promise<IItem> =>\n      axios.get(`items/${id}`).then((response: AxiosResponse) => response.data),\n    addItem: (item: IFormItem): Promise<IItem> =>\n      axios\n        .post(`items`, item)\n        .then((response: AxiosResponse) => response.data),\n    deleteItem: (id: string): Promise<IItem> =>\n      axios\n        .delete(`items/${id}`)\n        .then((response: AxiosResponse) => response.data),\n    editItem: (item: IItem) =>\n      axios\n        .put(`items/${item.id}`, item)\n        .then((response: AxiosResponse) => response.data),\n  },\n};\n\nexport default axiosAgent;\n","import { makeAutoObservable, runInAction } from \"mobx\";\nimport axiosAgent from \"../api/axiosAgent\";\nimport { BaseStore } from \"./BaseStore\";\nimport { IFormItem, IItem } from \"../models/Item\";\n\nexport default class ItemStore {\n  baseStore: BaseStore;\n\n  constructor(baseStore: BaseStore) {\n    makeAutoObservable(this);\n    this.baseStore = baseStore;\n  }\n\n  selectedItem: IItem | null = null;\n\n  itemsMap = new Map();\n  itemsLoading: boolean = true;\n  itemLoading: boolean = true;\n\n  setItemsLoading = (loading: boolean) => {\n    this.itemsLoading = loading;\n  };\n\n  setItemLoading = (loading: boolean) => {\n    this.itemLoading = loading;\n  };\n\n  getItem = async (id: string) => {\n    this.setItemLoading(true);\n    try {\n      const item = await axiosAgent.Item.getItem(Object.values(id)[0]);\n      runInAction(() => {\n        item.dateAdded = new Date(item.dateAdded);\n        item.addedBy = item.user.firstName + \" \" + item.user.lastName;\n        this.selectedItem = item;\n        this.setItemLoading(false);\n      });\n    } catch (error) {\n      this.setItemLoading(false);\n      throw error;\n    }\n  };\n\n  getItems = async () => {\n    try {\n      const items = await axiosAgent.Item.getItems();\n      runInAction(() => {\n        items.forEach((item) => {\n          item.dateAdded = new Date(item.dateAdded);\n          item.addedBy = item.user.firstName + \" \" + item.user.lastName;\n          this.itemsMap.set(item.id, item);\n        });\n      });\n    } catch (error) {\n      this.baseStore.commonStore.setLoading(false);\n      throw error;\n    }\n  };\n\n  addItem = async (item: IFormItem) => {\n    try {\n      const addedItem = await axiosAgent.Item.addItem(item);\n      runInAction(() => {\n        addedItem.dateAdded = new Date(item.dateAdded);\n        addedItem.addedBy =\n          addedItem.user.firstName + \" \" + addedItem.user.lastName;\n        this.itemsMap.set(addedItem.id, addedItem);\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  editItem = async (item: IItem) => {\n    try {\n      await axiosAgent.Item.editItem(item);\n      runInAction(() => {\n        this.itemsMap.set(item.id, item);\n        this.selectedItem = item;\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  deleteItem = async (id: string) => {\n    try {\n      const deletedItem = await axiosAgent.Item.deleteItem(id);\n      runInAction(() => {\n        this.itemsMap.delete(deletedItem.id);\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n}\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"..\";\r\nimport axiosAgent from \"../api/axiosAgent\";\r\nimport { IUser, IUserFormValues } from \"../models/User\";\r\nimport { BaseStore } from \"./BaseStore\";\r\n\r\nexport default class UserStore {\r\n  baseStore: BaseStore;\r\n  constructor(baseStore: BaseStore) {\r\n    makeAutoObservable(this);\r\n    this.baseStore = baseStore;\r\n  }\r\n\r\n  user: IUser | null = null;\r\n  selectedUser: IUser | null = null;\r\n  userLoading: boolean = false;\r\n\r\n  setUserLoading = (state: boolean) => {\r\n    this.userLoading = state;\r\n  };\r\n\r\n  login = async (userToLogin: IUserFormValues) => {\r\n    try {\r\n      const user = await axiosAgent.User.login(userToLogin);\r\n      if (user) {\r\n        runInAction(() => (this.user = user));\r\n        window.localStorage.setItem(\"token\", user.token);\r\n        history.push(\"/inventory\");\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  register = async (userToRegister: IUserFormValues) => {\r\n    try {\r\n      let user: IUser;\r\n      if (this.user && this.user.isAdmin === \"True\") {\r\n        user = await axiosAgent.User.registerAdmin(userToRegister);\r\n        console.log(user);\r\n        history.push(\"/inventory\");\r\n      } else {\r\n        user = await axiosAgent.User.register(userToRegister);\r\n        if (user) {\r\n          runInAction(() => (this.user = user));\r\n          window.localStorage.setItem(\"token\", user.token);\r\n          history.push(\"/inventory\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  getCurrentUser = async () => {\r\n    try {\r\n      const user = await axiosAgent.User.currentUser();\r\n      runInAction(() => {\r\n        this.user = user;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  getUserAtId = async (id: string) => {\r\n    this.setUserLoading(true);\r\n    try {\r\n      const user = await axiosAgent.User.userAtId(Object.values(id)[0]);\r\n      runInAction(() => {\r\n        this.selectedUser = user;\r\n        this.setUserLoading(false);\r\n      });\r\n    } catch (error) {\r\n      this.setUserLoading(false);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  removeActiveUser = () => {\r\n    this.user = null;\r\n  };\r\n\r\n  logout = () => {\r\n    this.user = null;\r\n    window.localStorage.removeItem(\"token\");\r\n    history.push(\"/login\");\r\n  };\r\n}\r\n","import { makeAutoObservable } from \"mobx\";\r\nimport { BaseStore } from \"./BaseStore\";\r\n\r\nexport default class ModalStore {\r\n  baseStore: BaseStore;\r\n  constructor(baseStore: BaseStore) {\r\n    makeAutoObservable(this);\r\n    this.baseStore = baseStore;\r\n  }\r\n\r\n  isShowing: boolean = false;\r\n  isEditShowing: boolean = false;\r\n\r\n  setEditShow = (state: boolean) => {\r\n    this.isEditShowing = state;\r\n  };\r\n  setShow = (state: boolean) => {\r\n    this.isShowing = state;\r\n  };\r\n}\r\n","import { makeAutoObservable } from \"mobx\";\r\nimport { createContext } from \"react\";\r\nimport CommonStore from \"./CommonStore\";\r\nimport ItemStore from \"./ItemStore\";\r\nimport UserStore from \"./UserStore\";\r\nimport ModalStore from \"./ModalStore\";\r\n\r\nexport class BaseStore {\r\n  userStore: UserStore;\r\n  commonStore: CommonStore;\r\n  itemStore: ItemStore;\r\n  modalStore: ModalStore;\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n    this.userStore = new UserStore(this);\r\n    this.commonStore = new CommonStore(this);\r\n    this.itemStore = new ItemStore(this);\r\n    this.modalStore = new ModalStore(this);\r\n  }\r\n}\r\n\r\nexport const BaseStoreContext = createContext(new BaseStore());\r\n","import { Form, Field, Formik } from \"formik\";\r\nimport { CSSProperties, Fragment, useContext } from \"react\";\r\nimport { Alert, Button, Spinner } from \"react-bootstrap\";\r\nimport * as Yup from \"yup\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { BaseStoreContext } from \"../../stores/BaseStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst loginPageStyle: CSSProperties = {\r\n  position: \"absolute\",\r\n  left: \"50%\",\r\n  top: \"50%\",\r\n  transform: \"translate(-50%, -80%)\",\r\n  maxWidth: \"530px\",\r\n  background: \"#ffffff\",\r\n  padding: \"30px\",\r\n  borderRadius: \"10px\",\r\n  boxShadow: \"0px 0px 10px 10px rgba(0,0,0,0.15)\",\r\n};\r\n\r\nconst labelStyle: CSSProperties = {\r\n  float: \"left\",\r\n};\r\n\r\nexport default observer(function LoginForm() {\r\n  const baseStore = useContext(BaseStoreContext);\r\n  const { login } = baseStore.userStore;\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        password: \"\",\r\n        error: null,\r\n      }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        login(values).catch((error) => setErrors({ error }))\r\n      }\r\n      validationSchema={Yup.object({\r\n        email: Yup.string()\r\n          .email(\"Email not valid\")\r\n          .required(\"Email is required\"),\r\n        password: Yup.string().required(\"Password is required\"),\r\n      })}\r\n    >\r\n      {({ handleSubmit, touched, isSubmitting, errors, isValid, dirty }) => (\r\n        <Fragment>\r\n          <div className=\"container\">\r\n            <div className=\"login-wrapper\" style={loginPageStyle}>\r\n              <h2>Inventory Management System</h2>\r\n              <h3\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                Login Page\r\n              </h3>\r\n              <Form className=\"form-container\" onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label style={labelStyle} htmlFor=\"email\">\r\n                    Email\r\n                  </label>\r\n                  <Field\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    className={\"form-control\"}\r\n                    placeholder=\"Email\"\r\n                  />\r\n                  {touched.email && errors.email && (\r\n                    <span className=\"help-block text-danger\">\r\n                      {errors.email}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label style={labelStyle} htmlFor=\"password\">\r\n                    Password\r\n                  </label>\r\n                  <Field\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    className={\"form-control\"}\r\n                    placeholder=\"Password\"\r\n                  />\r\n                  {touched.password && errors.password && (\r\n                    <span className=\"help-block text-danger\">\r\n                      {errors.password}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                {errors.error && (\r\n                  <Alert variant=\"danger\">Wrong login or password</Alert>\r\n                )}\r\n                {!isSubmitting && (\r\n                  <Button\r\n                    disabled={!dirty || !isValid}\r\n                    variant=\"primary\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                )}\r\n                {isSubmitting && (\r\n                  <Button variant=\"primary\" disabled>\r\n                    <Spinner\r\n                      as=\"span\"\r\n                      animation=\"grow\"\r\n                      size=\"sm\"\r\n                      role=\"status\"\r\n                      aria-hidden=\"true\"\r\n                    />\r\n                    Login\r\n                  </Button>\r\n                )}\r\n                <LinkContainer to=\"/register\">\r\n                  <Button className=\"ml-2\" variant=\"danger\">\r\n                    Create account\r\n                  </Button>\r\n                </LinkContainer>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { Form, Field, Formik } from \"formik\";\r\nimport { CSSProperties, Fragment, useContext } from \"react\";\r\nimport { Alert, Button, Spinner } from \"react-bootstrap\";\r\nimport * as Yup from \"yup\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { BaseStoreContext } from \"../../stores/BaseStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { AxiosResponse } from \"axios\";\r\n\r\nconst loginPageStyle: CSSProperties = {\r\n  position: \"absolute\",\r\n  left: \"50%\",\r\n  top: \"50%\",\r\n  transform: \"translate(-50%, -60%)\",\r\n  maxWidth: \"530px\",\r\n  background: \"#fff\",\r\n  padding: \"30px\",\r\n  borderRadius: \"10px\",\r\n  boxShadow: \"0px 0px 10px 10px rgba(0,0,0,0.15)\",\r\n};\r\n\r\nconst labelStyle: CSSProperties = {\r\n  float: \"left\",\r\n};\r\n\r\nexport type FormikErrors<Values> = {\r\n  [K in keyof Values]?: Values[K] extends object\r\n    ? FormikErrors<Values[K]>\r\n    : AxiosResponse;\r\n};\r\n\r\nexport default observer(function RegisterForm() {\r\n  const baseStore = useContext(BaseStoreContext);\r\n  const { register, user } = baseStore.userStore;\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        userName: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        error: null,\r\n      }}\r\n      onSubmit={(values, { setStatus, setErrors, setSubmitting }) => {\r\n        register(values).catch((error) => {\r\n          console.log(error.response.data);\r\n          if (\"errors\" in error.response.data) {\r\n            setStatus({\r\n              password: error.response.data.errors.Password,\r\n            });\r\n          }\r\n          if (\"email\" in error.response.data) {\r\n            setStatus({\r\n              email: error.response.data.email,\r\n            });\r\n          }\r\n\r\n          if (\"username\" in error.response.data) {\r\n            setStatus({\r\n              userName: error.response.data.username,\r\n            });\r\n          }\r\n          setSubmitting(false);\r\n        });\r\n      }}\r\n      validationSchema={Yup.object({\r\n        userName: Yup.string().required(\"Username is required\"),\r\n        firstName: Yup.string().required(\"First name is required\"),\r\n        lastName: Yup.string().required(\"Last name is required\"),\r\n        email: Yup.string()\r\n          .email(\"Email not valid\")\r\n          .required(\"Email is required\"),\r\n        password: Yup.string()\r\n          .matches(\r\n            /[A-Z]/,\r\n            \"Password must contain at least 1 uppercase character.\"\r\n          )\r\n          .matches(\r\n            /[a-z]/,\r\n            \"Password must contain at least 1 lowercase character.\"\r\n          )\r\n          .matches(/[0-9]/, \"Password must contain at least 1 number.\")\r\n          .matches(\r\n            /[^a-zA-Z0-9]/,\r\n            \"Password must contain at least 1 non alphanumeric character.\"\r\n          )\r\n          .matches(/^(.{6,99})$/, \"Password must be have at least 6 characters\")\r\n          .required(\"Password is required\"),\r\n      })}\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        setFieldValue,\r\n        touched,\r\n        isSubmitting,\r\n        errors,\r\n        setStatus,\r\n        isValid,\r\n        dirty,\r\n        status,\r\n      }) => (\r\n        <Fragment>\r\n          <div className=\"container\">\r\n            <div className=\"login-wrapper\" style={loginPageStyle}>\r\n              <h2>Inventory Management System</h2>\r\n              {(user && user.isAdmin === \"True\" && (\r\n                <h3>Register Admin Page</h3>\r\n              )) ?? <h3>Register Page</h3>}\r\n              <Form className=\"form-container\">\r\n                <div className=\"form-group\">\r\n                  <label style={labelStyle} htmlFor=\"userName\">\r\n                    Username\r\n                  </label>\r\n                  <Field\r\n                    type=\"text\"\r\n                    name=\"userName\"\r\n                    className={\"form-control\"}\r\n                    placeholder=\"Username\"\r\n                    onChange={(e: any) => {\r\n                      console.log(status);\r\n                      const { value } = e.target;\r\n                      setFieldValue(\"userName\", value);\r\n                      // setStatus({\r\n                      //   email: status!.email,\r\n                      //   password: status!.password,\r\n                      //   userName: \"\",\r\n                      // });\r\n                    }}\r\n                  />\r\n                  {touched.userName && errors.userName && (\r\n                    <span className=\"help-block text-danger\">\r\n                      {errors.userName}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label style={labelStyle} htmlFor=\"firstName\">\r\n                    First name\r\n                  </label>\r\n                  <Field\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    className={\"form-control\"}\r\n                    placeholder=\"First Name\"\r\n                  />\r\n                  {touched.firstName && errors.firstName && (\r\n                    <span className=\"help-block text-danger\">\r\n                      {errors.firstName}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label style={labelStyle} htmlFor=\"lastName\">\r\n                    Last name\r\n                  </label>\r\n                  <Field\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                    className={\"form-control\"}\r\n                    placeholder=\"Last Name\"\r\n                  />\r\n                  {touched.lastName && errors.lastName && (\r\n                    <span className=\"help-block text-danger\">\r\n                      {errors.lastName}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label style={labelStyle} htmlFor=\"email\">\r\n                    Email\r\n                  </label>\r\n                  <Field\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    className={\"form-control\"}\r\n                    placeholder=\"Email\"\r\n                    onChange={(e: any) => {\r\n                      const { value } = e.target;\r\n                      setFieldValue(\"email\", value);\r\n                      // setStatus({\r\n                      //   userName: status.userName,\r\n                      //   password: status.password,\r\n                      //   email: \"\",\r\n                      // });\r\n                    }}\r\n                  />\r\n                  {touched.email && errors.email && (\r\n                    <span className=\"help-block text-danger\">\r\n                      {errors.email}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label style={labelStyle} htmlFor=\"password\">\r\n                    Password\r\n                  </label>\r\n                  <Field\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    className={\"form-control\"}\r\n                    placeholder=\"Password\"\r\n                    onChange={(e: any) => {\r\n                      const { value } = e.target;\r\n                      setFieldValue(\"password\", value);\r\n                      // setStatus({\r\n                      //   email: status.email,\r\n                      //   userName: status.userName,\r\n                      //   password: \"\",\r\n                      // });\r\n                    }}\r\n                  />\r\n                  {touched.password && errors.password && (\r\n                    <span className=\"help-block text-danger\">\r\n                      {errors.password}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                {status && status.userName && (\r\n                  <Alert variant=\"danger\">{status.userName}</Alert>\r\n                )}\r\n                {status && status.email && (\r\n                  <Alert variant=\"danger\">{status.email}</Alert>\r\n                )}\r\n                {status && status.password && (\r\n                  <Alert variant=\"danger\">{status.password}</Alert>\r\n                )}\r\n                {!isSubmitting && (\r\n                  <Button\r\n                    disabled={!dirty || !isValid}\r\n                    variant=\"primary\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Register\r\n                  </Button>\r\n                )}\r\n                {isSubmitting && (\r\n                  <Button variant=\"primary\" disabled>\r\n                    <Spinner\r\n                      as=\"span\"\r\n                      animation=\"grow\"\r\n                      size=\"sm\"\r\n                      role=\"status\"\r\n                      aria-hidden=\"true\"\r\n                    />\r\n                    Register\r\n                  </Button>\r\n                )}\r\n                {(user && user.isAdmin === \"True\" && (\r\n                  <LinkContainer to=\"/inventory\">\r\n                    <Button className=\"ml-2\" variant=\"danger\">\r\n                      Go back to inventory\r\n                    </Button>\r\n                  </LinkContainer>\r\n                )) ?? (\r\n                  <LinkContainer to=\"/login\">\r\n                    <Button className=\"ml-2\" variant=\"danger\">\r\n                      Go back to login\r\n                    </Button>\r\n                  </LinkContainer>\r\n                )}\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import MaterialTable from \"material-table\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useContext } from \"react\";\r\nimport { history } from \"../../..\";\r\nimport { BaseStoreContext } from \"../../../stores/BaseStore\";\r\n\r\ninterface IProps {\r\n  searchData?: string;\r\n}\r\n\r\nexport default observer(function InventoryTable({ searchData }: IProps) {\r\n  const baseStore = useContext(BaseStoreContext);\r\n  const { itemsMap, itemsLoading } = baseStore.itemStore;\r\n\r\n  return (\r\n    <MaterialTable\r\n      isLoading={itemsLoading}\r\n      title=\"Inventory\"\r\n      columns={[\r\n        { title: \"Item name\", field: \"name\" },\r\n        { title: \"Barcode\", field: \"barcode\" },\r\n        { title: \"Date added\", field: \"dateAdded\", type: \"date\" },\r\n        { title: \"Added by\", field: \"addedBy\" },\r\n      ]}\r\n      data={Array.from(itemsMap.values())}\r\n      actions={[\r\n        {\r\n          icon: \"more_horiz\",\r\n          tooltip: \"Show Item Details\",\r\n          onClick: (event, rowData) => history.push(`/item/${rowData.id}`),\r\n        },\r\n        {\r\n          icon: \"account_circle\",\r\n          tooltip: \"Show User Details\",\r\n          onClick: (event, rowData) =>\r\n            history.push(`/account/${rowData.user.id}`),\r\n        },\r\n      ]}\r\n      options={{\r\n        searchText: searchData,\r\n      }}\r\n      // detailPanel={(rowData) => {\r\n      //   return (\r\n      //     <iframe\r\n      //       title=\"inventoryDetails\"\r\n      //       width=\"100%\"\r\n      //       height=\"315\"\r\n      //       src=\"https://www.youtube.com/embed/C0DPdy98e4c\"\r\n      //       frameBorder=\"0\"\r\n      //       allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n      //       allowFullScreen\r\n      //     />\r\n      //   );\r\n      // }}\r\n    />\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { BaseStoreContext } from \"../../../stores/BaseStore\";\r\nimport InventoryTable from \"./InventoryTable\";\r\n\r\ntype TParams = { searchData: string };\r\n\r\nexport default observer(function InventoryPage({\r\n  match,\r\n}: RouteComponentProps<TParams>) {\r\n  const baseStore = useContext(BaseStoreContext);\r\n  const { getItems, setItemsLoading } = baseStore.itemStore;\r\n\r\n  useEffect(() => {\r\n    setItemsLoading(true);\r\n    getItems().finally(() => setItemsLoading(false));\r\n  }, [getItems, setItemsLoading]);\r\n\r\n  return <InventoryTable searchData={match.params.searchData} />;\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useContext } from \"react\";\r\nimport { Navbar, Nav, NavDropdown, Button } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { BaseStoreContext } from \"../../stores/BaseStore\";\r\n\r\nexport default observer(function NavBar() {\r\n  const baseStore = useContext(BaseStoreContext);\r\n  const { user, logout } = baseStore.userStore;\r\n  const { setShow } = baseStore.modalStore;\r\n\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <LinkContainer to=\"/inventory\">\r\n        <Navbar.Brand>Inventory Management System</Navbar.Brand>\r\n      </LinkContainer>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <LinkContainer to=\"/inventory\">\r\n            <Button variant=\"primary\" onClick={() => setShow(true)}>\r\n              Add Item\r\n            </Button>\r\n          </LinkContainer>\r\n          {user && user.isAdmin === \"True\" && (\r\n            <LinkContainer to=\"/register\">\r\n              <Button className=\"ml-1\" variant=\"primary\">\r\n                Create admin account\r\n              </Button>\r\n            </LinkContainer>\r\n          )}\r\n\r\n          {/* <Nav.Link href=\"#link\">Link</Nav.Link> */}\r\n        </Nav>\r\n        <NavDropdown alignRight title={user?.firstName} id=\"basic-nav-dropdown\">\r\n          <LinkContainer to={{ pathname: \"/account\", state: { id: user?.id } }}>\r\n            <NavDropdown.Item>Account</NavDropdown.Item>\r\n          </LinkContainer>\r\n          <NavDropdown.Divider />\r\n          <NavDropdown.Item onClick={() => logout()}>Logout</NavDropdown.Item>\r\n        </NavDropdown>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { CSSProperties } from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nexport default observer(function Loading() {\r\n  const style: CSSProperties = {\r\n    position: \"fixed\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex-column align-items-center\" style={style}>\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n      <div className=\"row\">\r\n        <strong>Loading</strong>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","import { Field, Form, Formik } from \"formik\";\nimport { CSSProperties, Fragment, useContext } from \"react\";\nimport { Alert, Button, Spinner } from \"react-bootstrap\";\nimport * as Yup from \"yup\";\nimport { BaseStoreContext } from \"../../stores/BaseStore\";\nimport { observer } from \"mobx-react-lite\";\nimport { isMobile } from \"react-device-detect\";\nimport { isValid } from \"gtin\";\n\nlet loginPageStyle: CSSProperties = {\n  position: \"absolute\",\n  left: \"50%\",\n  top: \"50%\",\n  transform: \"translate(-50%, -80%)\",\n  maxWidth: \"530px\",\n  background: \"#ffffff\",\n  padding: \"30px\",\n  borderRadius: \"10px\",\n  boxShadow: \"0px 0px 10px 10px rgba(0,0,0,0.15)\",\n};\n\nif (isMobile) {\n  loginPageStyle = {\n    maxWidth: \"530px\",\n    background: \"#ffffff\",\n    padding: \"30px\",\n    borderRadius: \"10px\",\n    boxShadow: \"0px 0px 10px 10px rgba(0,0,0,0.15)\",\n  };\n}\n\nconst labelStyle: CSSProperties = {\n  float: \"left\",\n};\n\nexport default observer(function AddItemForm() {\n  const baseStore = useContext(BaseStoreContext);\n  const { setShow } = baseStore.modalStore;\n  const { addItem } = baseStore.itemStore;\n\n  Yup.addMethod(Yup.number, \"validateBarcode\", function (errorMessage) {\n    return this.test(`test-barcode`, errorMessage, function (value) {\n      const { path, createError } = this;\n\n      return (\n        isValid(value!.toString()) ||\n        createError({ path, message: errorMessage })\n      );\n    });\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        barcode: \"\",\n        dateAdded: new Date().toJSON(),\n        error: null,\n      }}\n      onSubmit={(values, { setStatus, setSubmitting }) => {\n        addItem(values)\n          .then(() => setShow(false))\n          .catch((error) => {\n            if (\"Barcode\" in error.response.data) {\n              setStatus({\n                barcode: error.response.data.Barcode,\n              });\n            } else if (\"Barcode\" in error.response.data.errors) {\n              setStatus({\n                barcode: error.response.data.errors.Barcode,\n              });\n            }\n            setSubmitting(false);\n          });\n      }}\n      validationSchema={Yup.object({\n        name: Yup.string().required(\"Item name is required\"),\n        barcode: Yup.number()\n          .test(\n            \"is-barcode\",\n            \"Invalid barcode\",\n            (value, context) =>\n              value === undefined || isValid(value!.toString()) === true\n          )\n          .required(\"Barcode is required\"),\n      })}\n    >\n      {({\n        setFieldValue,\n        handleSubmit,\n        touched,\n        setStatus,\n        setErrors,\n        isSubmitting,\n        errors,\n        isValid,\n        dirty,\n        status,\n      }) => (\n        <Fragment>\n          <div className=\"container\">\n            <div className=\"login-wrapper\" style={loginPageStyle}>\n              <h2>Add new item</h2>\n              <Form className=\"form-container\" onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                  <label style={labelStyle} htmlFor=\"name\">\n                    Item name\n                  </label>\n                  <Field\n                    type=\"text\"\n                    name=\"name\"\n                    className={\"form-control\"}\n                    placeholder=\"Item name\"\n                  />\n                  {touched.name && errors.name && (\n                    <span className=\"help-block text-danger\">\n                      {errors.name}\n                    </span>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <label style={labelStyle} htmlFor=\"barcode\">\n                    Barcode\n                  </label>\n                  <Field\n                    type=\"text\"\n                    name=\"barcode\"\n                    pattern=\"\\d*\"\n                    onChange={(e: any) => {\n                      e.preventDefault();\n                      const { value } = e.target;\n                      const regex = /^[0-9]*$/;\n                      if (regex.test(value.toString())) {\n                        setFieldValue(\"barcode\", value);\n                        setStatus({\n                          barcode: \"\",\n                        });\n                      }\n                    }}\n                    className={\"form-control\"}\n                    placeholder=\"Barcode\"\n                  />\n                  {touched.barcode && errors.barcode && (\n                    <span className=\"help-block text-danger\">\n                      {errors.barcode}\n                    </span>\n                  )}\n                </div>\n                {status && status.barcode && (\n                  <Alert variant=\"danger\">{status.barcode}</Alert>\n                )}\n                {!isSubmitting && (\n                  <Button\n                    disabled={!dirty || !isValid}\n                    variant=\"primary\"\n                    type=\"submit\"\n                  >\n                    Add\n                  </Button>\n                )}\n                {isSubmitting && (\n                  <Button variant=\"primary\" disabled>\n                    <Spinner\n                      as=\"span\"\n                      animation=\"grow\"\n                      size=\"sm\"\n                      role=\"status\"\n                      aria-hidden=\"true\"\n                    />\n                    Submit\n                  </Button>\n                )}\n                <Button\n                  onClick={() => setShow(false)}\n                  className=\"ml-2\"\n                  variant=\"danger\"\n                >\n                  Cancel\n                </Button>\n              </Form>\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </Formik>\n  );\n});\n","import { useContext } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Modal } from \"react-bootstrap\";\nimport { BaseStoreContext } from \"../../stores/BaseStore\";\nimport AddItemForm from \"./AddItemForm\";\n\nexport default observer(function AddItemsModal() {\n  const baseStore = useContext(BaseStoreContext);\n  const { isShowing, setShow } = baseStore.modalStore;\n\n  return (\n    <Modal\n      dialogAs={AddItemForm}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      show={isShowing}\n      onHide={() => setShow(false)}\n    >\n      <Modal.Dialog size=\"lg\" />\n    </Modal>\n  );\n});\n","import { Card } from \"@material-ui/core\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { CSSProperties, Fragment, useContext } from \"react\";\r\nimport { Button, Col, Row } from \"react-bootstrap\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { history } from \"../..\";\r\nimport { BaseStoreContext } from \"../../stores/BaseStore\";\r\n\r\nexport default observer(function AccountPage() {\r\n  const baseStore = useContext(BaseStoreContext);\r\n  const { user } = baseStore.userStore;\r\n\r\n  const style: CSSProperties = {\r\n    width: \"55vh\",\r\n  };\r\n\r\n  const btnStyle: CSSProperties = {\r\n    width: \"50%\",\r\n    height: \"50%\",\r\n    margin: \"0\",\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    transform: \"translateY(-50%)\",\r\n    msTransform: \"translateY(-50%)\",\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {user && (\r\n        <div className=\"container d-flex justify-content-center\">\r\n          <Card style={style} className=\"p-5 w-75\">\r\n            <Row>\r\n              <Col xs={7} md={5}>\r\n                {!isMobile && (\r\n                  <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <Button\r\n                      style={btnStyle}\r\n                      onClick={() =>\r\n                        history.push(\r\n                          `/inventory/${user.firstName + \" \" + user.lastName}`\r\n                        )\r\n                      }\r\n                      variant=\"outline-primary\"\r\n                    >\r\n                      Search for items added by user\r\n                    </Button>\r\n                  </div>\r\n                )}\r\n\r\n                {/* <div className=\"image\">\r\n                  <Image\r\n                    src=\"https://react-bootstrap-v3.netlify.app/thumbnail.png\"\r\n                    rounded\r\n                    fluid\r\n                  />\r\n                </div> */}\r\n              </Col>\r\n              <Col>\r\n                <div className=\"align-items-center\">\r\n                  <div className=\"ml-3 w-100\">\r\n                    <h4 className=\"mb-0 mt-0\">\r\n                      {user.firstName} {user.lastName}\r\n                    </h4>\r\n                    <hr />\r\n                    <div>Email: {user.email}</div>\r\n                    <hr />\r\n                    <div>\r\n                      Role:\r\n                      {user.isAdmin === \"True\" && \" Administrator\"}\r\n                      {user.isAdmin === \"False\" && \" User\"}\r\n                    </div>\r\n                    <hr />\r\n                    {isMobile && (\r\n                      <Button\r\n                        onClick={() =>\r\n                          history.push(\r\n                            `/inventory/${user.firstName + \" \" + user.lastName}`\r\n                          )\r\n                        }\r\n                        variant=\"outline-primary\"\r\n                      >\r\n                        Search for items added by user\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n});\r\n","import { Card } from \"@material-ui/core\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useContext, useEffect, CSSProperties, Fragment } from \"react\";\r\nimport { Row, Col, Button } from \"react-bootstrap\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { history } from \"../..\";\r\nimport Loading from \"../../layout/Loading\";\r\nimport { BaseStoreContext } from \"../../stores/BaseStore\";\r\n\r\nexport default observer(function PublicAccountPage(id: any) {\r\n  const baseStore = useContext(BaseStoreContext);\r\n  const { getUserAtId, selectedUser, userLoading } = baseStore.userStore;\r\n\r\n  useEffect(() => {\r\n    try {\r\n      getUserAtId(id);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [getUserAtId, id]);\r\n\r\n  const style: CSSProperties = {\r\n    width: \"55vh\",\r\n  };\r\n\r\n  const btnStyle: CSSProperties = {\r\n    width: \"50%\",\r\n    height: \"50%\",\r\n    margin: \"0\",\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    transform: \"translateY(-50%)\",\r\n    msTransform: \"translateY(-50%)\",\r\n  };\r\n\r\n  if (userLoading) return <Loading />;\r\n\r\n  return (\r\n    <Fragment>\r\n      {selectedUser && (\r\n        <div className=\"container d-flex justify-content-center\">\r\n          <Card style={style} className=\"p-5 w-75\">\r\n            <Row>\r\n              <Col xs={7} md={5}>\r\n                {!isMobile && (\r\n                  <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <Button\r\n                      style={btnStyle}\r\n                      onClick={() =>\r\n                        history.push(\r\n                          `/inventory/${\r\n                            selectedUser.firstName + \" \" + selectedUser.lastName\r\n                          }`\r\n                        )\r\n                      }\r\n                      variant=\"outline-primary\"\r\n                    >\r\n                      Search for items added by user\r\n                    </Button>\r\n                  </div>\r\n                )}\r\n                {/* <div className=\"image\">\r\n                  <Image\r\n                    src=\"https://react-bootstrap-v3.netlify.app/thumbnail.png\"\r\n                    rounded\r\n                    fluid\r\n                  />\r\n                </div> */}\r\n              </Col>\r\n              <Col xs={6} md={5}>\r\n                <div className=\"align-items-center\">\r\n                  <div className=\"ml-3 w-100\">\r\n                    <h4 className=\"mb-0 mt-0\">\r\n                      {selectedUser.firstName} {selectedUser.lastName}\r\n                    </h4>\r\n                    <hr />\r\n                    <div>Email: {selectedUser.email}</div>\r\n                    <hr />\r\n                    <div>\r\n                      Role:\r\n                      {selectedUser.isAdmin === \"True\" && \" Administrator\"}\r\n                      {selectedUser.isAdmin === \"False\" && \" User\"}\r\n                    </div>\r\n                    <hr />\r\n                    {isMobile && (\r\n                      <Button\r\n                        onClick={() =>\r\n                          history.push(\r\n                            `/inventory/${\r\n                              selectedUser.firstName +\r\n                              \" \" +\r\n                              selectedUser.lastName\r\n                            }`\r\n                          )\r\n                        }\r\n                        variant=\"outline-primary\"\r\n                      >\r\n                        Search for items added by user\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Fragment } from \"react\";\r\n\r\nexport default observer(function NotFound() {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"d-flex justify-content-center align-items-center\">\r\n        <h1\r\n          style={{ fontSize: \"10rem\" }}\r\n          className=\"mr-3 pr-3 text-center align-top inline-block align-content-center\"\r\n        >\r\n          404\r\n        </h1>\r\n      </div>\r\n      <div className=\"d-flex justify-content-center align-items-center\">\r\n        <h2\r\n          style={{ fontSize: \"2rem\" }}\r\n          className=\"text-center font-weight-normal lead\"\r\n          id=\"desc\"\r\n        >\r\n          The page you requested was not found.\r\n        </h2>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Fragment } from \"react\";\r\n\r\nexport default observer(function ServerError() {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"d-flex justify-content-center align-items-center\">\r\n        <h1\r\n          style={{ fontSize: \"10rem\" }}\r\n          className=\"mr-3 pr-3 text-center align-top inline-block align-content-center\"\r\n        >\r\n          500\r\n        </h1>\r\n      </div>\r\n      <div className=\"d-flex justify-content-center align-items-center\">\r\n        <h2\r\n          style={{ fontSize: \"2rem\" }}\r\n          className=\"text-center font-weight-normal lead\"\r\n          id=\"desc\"\r\n        >\r\n          There was an internal server error. Please try again later.\r\n        </h2>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useContext, useEffect, CSSProperties, Fragment } from \"react\";\r\nimport { Row, Col, Button, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { history } from \"../..\";\r\nimport Loading from \"../../layout/Loading\";\r\nimport { BaseStoreContext } from \"../../stores/BaseStore\";\r\n\r\nexport default observer(function ItemPage(id: any) {\r\n  const baseStore = useContext(BaseStoreContext);\r\n  const {\r\n    getItem,\r\n    deleteItem,\r\n    selectedItem,\r\n    itemLoading,\r\n  } = baseStore.itemStore;\r\n  const { user } = baseStore.userStore;\r\n  const { setEditShow } = baseStore.modalStore;\r\n\r\n  useEffect(() => {\r\n    try {\r\n      getItem(id);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [getItem, id]);\r\n\r\n  const style: CSSProperties = {\r\n    width: \"55vh\",\r\n  };\r\n\r\n  if (itemLoading) return <Loading />;\r\n\r\n  return (\r\n    <Fragment>\r\n      {selectedItem && (\r\n        <div className=\"container d-flex justify-content-center \">\r\n          <Card style={style} className=\"p-5 w-75 text-center\">\r\n            <Row>\r\n              <Col>\r\n                <div className=\"align-items-center\">\r\n                  <div className=\"ml-3 w-100\">\r\n                    <h4 className=\"mb-0 mt-0\">\r\n                      Item name: {selectedItem.name}\r\n                    </h4>\r\n                    <hr />\r\n                    <div>Barcode: {selectedItem.barcode}</div>\r\n                    <hr />\r\n                    <div>\r\n                      Added on:{\" \"}\r\n                      {selectedItem.dateAdded.toLocaleDateString() +\r\n                        \" \" +\r\n                        selectedItem.dateAdded.toLocaleTimeString()}\r\n                    </div>\r\n                    <hr />\r\n                    <div>\r\n                      Added by:{\" \"}\r\n                      <Link to={`/account/${selectedItem.user.id}`}>\r\n                        {selectedItem.addedBy}\r\n                      </Link>\r\n                    </div>\r\n                    <hr />\r\n                    {(selectedItem.user.id === user!.id ||\r\n                      user!.isAdmin === \"True\") && (\r\n                      <div>\r\n                        <Button\r\n                          onClick={() => setEditShow(true)}\r\n                          variant=\"primary\"\r\n                        >\r\n                          Edit\r\n                        </Button>\r\n                        <Button\r\n                          style={{ margin: \"0 0 0 2vh\" }}\r\n                          onClick={() => {\r\n                            deleteItem(selectedItem.id);\r\n                            history.push(`/inventory`);\r\n                          }}\r\n                          variant=\"danger\"\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n});\r\n","import { Field, Form, Formik } from \"formik\";\r\nimport { CSSProperties, Fragment, useContext } from \"react\";\r\nimport { Alert, Button, Spinner } from \"react-bootstrap\";\r\nimport * as Yup from \"yup\";\r\nimport { BaseStoreContext } from \"../../stores/BaseStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { isValid } from \"gtin\";\r\n\r\nlet loginPageStyle: CSSProperties = {\r\n  position: \"absolute\",\r\n  left: \"50%\",\r\n  top: \"50%\",\r\n  transform: \"translate(-50%, -80%)\",\r\n  maxWidth: \"530px\",\r\n  background: \"#ffffff\",\r\n  padding: \"30px\",\r\n  borderRadius: \"10px\",\r\n  boxShadow: \"0px 0px 10px 10px rgba(0,0,0,0.15)\",\r\n};\r\n\r\nif (isMobile) {\r\n  loginPageStyle = {\r\n    maxWidth: \"530px\",\r\n    background: \"#ffffff\",\r\n    padding: \"30px\",\r\n    borderRadius: \"10px\",\r\n    boxShadow: \"0px 0px 10px 10px rgba(0,0,0,0.15)\",\r\n  };\r\n}\r\n\r\nconst labelStyle: CSSProperties = {\r\n  float: \"left\",\r\n};\r\n\r\nexport default observer(function EditItemForm() {\r\n  const baseStore = useContext(BaseStoreContext);\r\n  const { setEditShow } = baseStore.modalStore;\r\n  const { editItem, selectedItem } = baseStore.itemStore;\r\n\r\n  Yup.addMethod(Yup.number, \"validateBarcode\", function (errorMessage) {\r\n    return this.test(`test-barcode`, errorMessage, function (value) {\r\n      const { path, createError } = this;\r\n\r\n      return (\r\n        isValid(value!.toString()) ||\r\n        createError({ path, message: errorMessage })\r\n      );\r\n    });\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        id: selectedItem!.id,\r\n        name: selectedItem!.name,\r\n        barcode: selectedItem!.barcode,\r\n        dateAdded: selectedItem!.dateAdded,\r\n        addedBy: selectedItem!.addedBy,\r\n        user: selectedItem!.user,\r\n        error: null,\r\n      }}\r\n      onSubmit={(values, { setStatus, setSubmitting }) => {\r\n        editItem(values)\r\n          .then(() => setEditShow(false))\r\n          .catch((error) => {\r\n            if (\"Barcode\" in error.response.data) {\r\n              setStatus({\r\n                barcode: error.response.data.Barcode,\r\n              });\r\n            } else if (\"Barcode\" in error.response.data.errors) {\r\n              setStatus({\r\n                barcode: error.response.data.errors.Barcode,\r\n              });\r\n            }\r\n            setSubmitting(false);\r\n          });\r\n      }}\r\n      validationSchema={Yup.object({\r\n        name: Yup.string().required(\"Item name is required\"),\r\n        barcode: Yup.number()\r\n          .test(\r\n            \"is-barcode\",\r\n            \"Invalid barcode\",\r\n            (value, context) =>\r\n              value === undefined || isValid(value!.toString()) === true\r\n          )\r\n          .required(\"Barcode is required\"),\r\n      })}\r\n    >\r\n      {({\r\n        setFieldValue,\r\n        handleSubmit,\r\n        touched,\r\n        setStatus,\r\n        setErrors,\r\n        isSubmitting,\r\n        errors,\r\n        isValid,\r\n        dirty,\r\n        status,\r\n      }) => (\r\n        <Fragment>\r\n          <div className=\"container\">\r\n            <div className=\"login-wrapper\" style={loginPageStyle}>\r\n              <h2>Edit item</h2>\r\n              <Form className=\"form-container\" onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label style={labelStyle} htmlFor=\"name\">\r\n                    Item name\r\n                  </label>\r\n                  <Field\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    className={\"form-control\"}\r\n                    placeholder=\"Item name\"\r\n                  />\r\n                  {touched.name && errors.name && (\r\n                    <span className=\"help-block text-danger\">\r\n                      {errors.name}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label style={labelStyle} htmlFor=\"barcode\">\r\n                    Barcode\r\n                  </label>\r\n                  <Field\r\n                    type=\"text\"\r\n                    name=\"barcode\"\r\n                    pattern=\"\\d*\"\r\n                    onChange={(e: any) => {\r\n                      e.preventDefault();\r\n                      const { value } = e.target;\r\n                      const regex = /^[0-9]*$/;\r\n                      if (regex.test(value.toString())) {\r\n                        setFieldValue(\"barcode\", value);\r\n                        setStatus({\r\n                          barcode: \"\",\r\n                        });\r\n                      }\r\n                    }}\r\n                    className={\"form-control\"}\r\n                    placeholder=\"Barcode\"\r\n                  />\r\n                  {touched.barcode && errors.barcode && (\r\n                    <span className=\"help-block text-danger\">\r\n                      {errors.barcode}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                {status && status.barcode && (\r\n                  <Alert variant=\"danger\">{status.barcode}</Alert>\r\n                )}\r\n                {!isSubmitting && (\r\n                  <Button\r\n                    disabled={!dirty || !isValid}\r\n                    variant=\"primary\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Add\r\n                  </Button>\r\n                )}\r\n                {isSubmitting && (\r\n                  <Button variant=\"primary\" disabled>\r\n                    <Spinner\r\n                      as=\"span\"\r\n                      animation=\"grow\"\r\n                      size=\"sm\"\r\n                      role=\"status\"\r\n                      aria-hidden=\"true\"\r\n                    />\r\n                    Submit\r\n                  </Button>\r\n                )}\r\n                <Button\r\n                  onClick={() => setEditShow(false)}\r\n                  className=\"ml-2\"\r\n                  variant=\"danger\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { useContext } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { BaseStoreContext } from \"../../stores/BaseStore\";\r\nimport EditItemForm from \"./EditItemForm\";\r\n\r\nexport default observer(function EditItemsModal() {\r\n  const baseStore = useContext(BaseStoreContext);\r\n  const { isEditShowing, setEditShow } = baseStore.modalStore;\r\n\r\n  return (\r\n    <Modal\r\n      dialogAs={EditItemForm}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      show={isEditShowing}\r\n      onHide={() => setEditShow(false)}\r\n    >\r\n      <Modal.Dialog size=\"lg\" />\r\n    </Modal>\r\n  );\r\n});\r\n","import React, { Fragment, useContext, useEffect } from \"react\";\nimport \"./App.css\";\nimport LoginForm from \"../features/user/LoginForm\";\nimport {\n  Redirect,\n  Route,\n  RouteComponentProps,\n  Switch,\n  withRouter,\n} from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport { Container } from \"react-bootstrap\";\nimport RegisterForm from \"../features/user/RegisterForm\";\nimport InventoryPage from \"../features/user/Inventory/InventoryPage\";\nimport { BaseStoreContext } from \"../stores/BaseStore\";\nimport NavBar from \"./navigation/NavBar\";\nimport Loading from \"./Loading\";\nimport AddItemModal from \"../features/items/AddItemModal\";\nimport { isMobile } from \"react-device-detect\";\nimport AccountPage from \"../features/user/AccountPage\";\nimport PublicAccountPage from \"../features/user/PublicAccountPage\";\nimport NotFound from \"./NotFound\";\nimport ServerError from \"./ServerError\";\nimport ItemPage from \"../features/items/ItemPage\";\nimport EditItemModal from \"../features/items/EditItemModal\";\n\nconst App: React.FC<RouteComponentProps> = ({ location }) => {\n  const baseStore = useContext(BaseStoreContext);\n  const { getCurrentUser, user } = baseStore.userStore;\n  const { setLoading, loading } = baseStore.commonStore;\n\n  useEffect(() => {\n    setLoading(true);\n    if (window.localStorage.getItem(\"token\")) {\n      getCurrentUser().finally(() => setLoading(false));\n    } else {\n      setLoading(false);\n    }\n  }, [getCurrentUser, setLoading]);\n\n  //TODO: make something better\n  if (isMobile) {\n    return <Fragment>Use our app to use our website on mobile</Fragment>;\n  }\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  if (!user || !window.localStorage.getItem(\"token\")) {\n    return (\n      <Fragment>\n        <Route exact path=\"/\" component={LoginForm} />\n        <Route\n          path={\"/(.+)\"}\n          render={() => (\n            <Fragment>\n              <Container style={{ marginTop: \"7em\" }}>\n                <Switch>\n                  <Route path=\"/login\" component={LoginForm} />\n                  <Route path=\"/register\" component={RegisterForm} />\n                  <Route exact path=\"/ServerError\" component={ServerError} />\n                  <Route component={LoginForm} />\n                </Switch>\n              </Container>\n            </Fragment>\n          )}\n        />\n      </Fragment>\n    );\n  }\n\n  return (\n    <Fragment>\n      <AddItemModal />\n      <EditItemModal />\n      <Route exact path=\"/\">\n        <Redirect to=\"/inventory\" />\n      </Route>\n      {/* When we hit route with / and anything else this route will match */}\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <Fragment>\n            <NavBar />\n            <Container style={{ marginTop: \"7em\" }}>\n              {/* Only one route can be displayed at once in Switch component */}\n              <Switch>\n                {/* <ActivityDashboard /> */}\n                {/* Without exact when we go to /activities for react\n         both www.something.com/ and .com/activities match so both will be rendered */}\n                {user.isAdmin && user.isAdmin === \"True\" && (\n                  <Route exact path=\"/register\" component={RegisterForm} />\n                )}\n                <Route\n                  exact\n                  key={location.key}\n                  path=\"/inventory/:searchData?\"\n                  component={InventoryPage}\n                />\n                {/* :id is a route parameter */}\n                {/* <Route path=\"/account/:id\" component={AccountPage} /> */}\n                {/* <Route\n                  //Whenever key changes we will re-initialise this component\n                  key={location.key}\n                  path={[\"/createActivity\", \"/manage/:id\"]}\n                  component={ActivityForm}\n                /> */}\n                <Route\n                  exact\n                  path=\"/item/:id\"\n                  component={(props: { match: { params: { id: string } } }) => (\n                    <ItemPage id={props.match.params.id} />\n                  )}\n                />\n                <Route\n                  exact\n                  path=\"/account/:id\"\n                  component={(props: { match: { params: { id: string } } }) => (\n                    <PublicAccountPage id={props.match.params.id} />\n                  )}\n                />\n                <Route exact path=\"/account\" component={AccountPage} />\n                {/* <Route path=\"/login\" component={LoginForm} />\n                <Route path=\"/register\" component={RegisterForm} /> */}\n                {/* If route can't be found we will be redirected here */}\n                <Route exact path=\"/ServerError\" component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </Fragment>\n        )}\n      />\n    </Fragment>\n  );\n};\n\nexport default withRouter(observer(App));\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./layout/styles.css\";\nimport App from \"./layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport ScrollToTop from \"./layout/util/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={history}>\n    <ScrollToTop />\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}